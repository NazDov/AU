apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'jacoco'


jacoco {
    toolVersion = "0.7.5.201505241946"
}
ext.UNI = project.hasProperty("UNI") ? project.property("UNI") : "WEIMAR";
ext.appId = "au.de." + UNI + ".www"
ext.appName = "AU " + UNI
ext.appIcon = UNI == "WEIMAR" ? "@mipmap/weimar_ic_launcher" : "@mipmap/lmu_ic_launcher"

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId appId
        minSdkVersion 18
        targetSdkVersion 25
        versionCode 1
        versionName "1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled = true
            manifestPlaceholders = [
                    appName: appName,
                    appIcon: appIcon
            ]
        }

        debug {
            manifestPlaceholders = [
                    appName: appName,
                    appIcon: appIcon
            ]
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile 'com.android.support:support-annotations:25.3.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    // Optional -- Hamcrest library
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with UI Automator
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.0.8'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'org.jsoup:jsoup:1.9.1'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.google.guava:guava:20.0'
    testCompile 'org.robolectric:robolectric:3.3.2'
    testCompile 'org.robolectric:shadows-support-v4:3.0'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4-rule-agent:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'org.mockito:mockito-android:2.7.22'
}



task buildForUNI {
    def propertyFile = file("src/main/assets/university.properties")
    def props = new Properties()
    def fileWriter = new FileWriter(propertyFile)
    props.setProperty("name", UNI)
    appName = "AU " + UNI
    try {
        props.store(fileWriter, null);
        fileWriter.flush();
    } finally {
        fileWriter.close();
    }
}
